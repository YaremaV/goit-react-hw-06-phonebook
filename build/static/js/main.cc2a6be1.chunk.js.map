{"version":3,"sources":["components/Form/form.module.css","components/Filter/filter.module.css","components/Contactslist/Contactslist.js","components/Form/Form.js","components/Filter/Filter.js","components/Container/Container.js","components/Layout/Layout.js","App.js","index.js"],"names":["module","exports","ContactsList","contacts","onDeleteContacts","className","map","id","name","number","type","onClick","Form","onSubmit","useState","setName","setNumber","handleChange","evt","target","value","reset","s","form","preventDefault","onChange","pattern","title","required","Filter","onHandleFilter","filter","Container","children","Layout","App","JSON","parse","window","localStorage","getItem","initialContacts","setContacts","setFilter","useEffect","setItem","stringify","newContact","normValue","toLowerCase","uuidv4","some","alert","e","currentTarget","filterCase","contact","includes","getFilteredContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc2a6be1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3mnyy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__-pCSM\"};","import React from 'react';\nimport './contactlist.css';\n\nexport default function ContactsList({ contacts, onDeleteContacts }) {\n  return (\n    <ul className=\"contacts\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}:{number}\n          <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport s from './form.module.css';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <h2>Phonebook</h2>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","import React from 'react';\nimport s from './filter.module.css';\n\nexport default function Filter({ value, onHandleFilter }) {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label className={s.filter}>\n        Find contacts by name\n        <input type=\"text\" value={value} onChange={onHandleFilter} />\n      </label>\n    </>\n  );\n}\n","import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport Container from '../Container/Container';\n\nconst Layout = ({ children }) => (\n  <>\n    <Container>{children}</Container>\n  </>\n);\n\nexport default Layout;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactsList from './components/Contactslist/Contactslist';\nimport initialContacts from './contacts.json';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Layout from './components/Layout/Layout';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    () =>\n      JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts,\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContacts = newContact => {\n    const normValue = newContact.name.toLowerCase();\n    newContact.id = uuidv4();\n\n    contacts.some(({ name }) => name.toLowerCase() === normValue)\n      ? alert(`${newContact.name} is already in contacts`)\n      : setContacts([newContact, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts =>\n      contacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getFilteredContacts = () => {\n    const filterCase = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterCase),\n    );\n  };\n\n  return (\n    <Layout>\n      <Form onSubmit={addContacts} />\n      <Filter value={filter} onHandleFilter={changeFilter} />\n      <ContactsList\n        contacts={getFilteredContacts()}\n        onDeleteContacts={deleteContact}\n      />\n    </Layout>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}