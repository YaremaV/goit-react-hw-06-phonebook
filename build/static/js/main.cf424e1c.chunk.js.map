{"version":3,"sources":["components/Form/form.module.css","components/Filter/filter.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-actions.js","components/Contactslist/Contactslist.js","components/Form/Form.js","components/Filter/Filter.js","components/Container/Container.js","components/Layout/Layout.js","App.js","index.js"],"names":["module","exports","combineReducers","items","state","initialContacts","type","payload","types","filter","contact","id","rootReducer","contacts","contactsReducer","store","createStore","composeWithDevTools","name","number","uuidv4","contactsId","value","connect","visibleContacts","filterCase","toLowerCase","includes","getFilteredContacts","dispatch","onDeleteContacts","contactsAction","className","map","onClick","onSubmit","ContactsActions","useState","setName","setNumber","handleChange","evt","target","reset","s","form","preventDefault","onChange","pattern","title","required","onHandleFilter","event","Container","children","Layout","App","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf424e1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3mnyy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__-pCSM\"};","export default {\r\n  ADD: 'contacts/add',\r\n  DELETE: 'contacts/delete',\r\n  FILTER: 'contacts/filter',\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport initialContacts from '../.././contacts.json';\r\nimport types from './contacts-types';\r\n\r\nconst items = (state = initialContacts, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n    case types.DELETE:\r\n      return state.filter(contact => contact.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport contactsReducer from '../redux/contacts/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\nexport default store;\r\n","import types from './contacts-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContacts = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContacts = contactsId => ({\r\n  type: types.DELETE,\r\n  payload: contactsId,\r\n});\r\n\r\nconst filter = value => ({\r\n  type: types.FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport default { addContacts, deleteContacts, filter };\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\nimport './contactlist.css';\n\nfunction ContactsList({ contacts, onDeleteContacts }) {\n  return (\n    <ul className=\"contacts\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}:{number}\n          <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst getFilteredContacts = (contacts, filter) => {\n  const filterCase = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterCase),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n\n  const visibleContacts = getFilteredContacts(items, filter);\n  return {\n    contacts: visibleContacts,\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(contactsAction.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport s from './form.module.css';\nimport ContactsActions from '../../redux/contacts/contacts-actions';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <h2>Phonebook</h2>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(ContactsActions.addContacts(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport s from './filter.module.css';\nimport ContactsActions from '../../redux/contacts/contacts-actions';\n\nfunction Filter({ value, onHandleFilter }) {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label className={s.filter}>\n        Find contacts by name\n        <input type=\"text\" value={value} onChange={onHandleFilter} />\n      </label>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onHandleFilter: event => dispatch(ContactsActions.filter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport Container from '../Container/Container';\n\nconst Layout = ({ children }) => (\n  <>\n    <Container>{children}</Container>\n  </>\n);\n\nexport default Layout;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactsList from './components/Contactslist/Contactslist';\nimport initialContacts from './contacts.json';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Layout from './components/Layout/Layout';\n\nexport default function App() {\n  // const [contacts, setContacts] = useState(\n  //   () =>\n  //     JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts,\n  // );\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <Layout>\n      <Form />\n      <Filter />\n      <ContactsList />\n    </Layout>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}